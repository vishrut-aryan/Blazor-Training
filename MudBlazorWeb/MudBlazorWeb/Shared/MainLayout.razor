@using global::Shared.Services
@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime

<MudThemeProvider Theme="@ThemeService.CurrentTheme" IsDarkMode="@ThemeService.IsDarkMode" />

<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <MudToggleIconButton  @bind-Toggled="ThemeService.IsDarkMode" 
            Icon="@Icons.Material.Outlined.DarkMode" Color="@Color.Default" 
            ToggledIcon="@Icons.Material.Outlined.LightMode" ToggledColor="@Color.Warning"
            title="@(ThemeService.IsDarkMode ? "Light" : "Dark")" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Style="background-color:darkgrey">
            @Body
    </MudMainContent>
    <MudScrollToTop>
        <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
    </MudScrollToTop>
</MudLayout>

@code {
    bool _drawerOpen = false;
    private string mainbgcolor { get; set; } = "";

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
        StateHasChanged();
    }
}